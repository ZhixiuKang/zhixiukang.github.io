<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JavaScript on 修的个人网站</title>
    <link>http://zhixiukang.com/tags/javascript/</link>
    <description>Recent content in JavaScript on 修的个人网站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 08 Feb 2020 15:21:33 -0800</lastBuildDate>
    
	<atom:link href="http://zhixiukang.com/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JS语法</title>
      <link>http://zhixiukang.com/posts/js-grammar/</link>
      <pubDate>Sat, 08 Feb 2020 15:21:33 -0800</pubDate>
      
      <guid>http://zhixiukang.com/posts/js-grammar/</guid>
      <description>JS 语法  参考资料: JavaScript 的基本语法 - JavaScript 教程 - 网道
 JS 版本 历史版本  ES3, IE 6 支持，总体评价: 垃圾 ES5, 总体评价: 还是垃圾 ES6, 大部分浏览器支持,总体评价:一半垃圾一半好 ES2019 与 ES6 差别不大  为什么说 ES6 一半垃圾  因为 ES 不能删除以前的特性，要兼容旧网站 也就是说以前能运行的网站，以后都要能运行 对于 Python3 你就能知道兼容的好处: 稳定   JS 之父对 JS 的早期评价(ES6 前): 它的优秀之处并非原创，它的原创之处并不优秀。
  取其精华，去其糟粕。是我们对待 JS 的态度。
 表达式、语句、标识符 表达式与语句 表达式  1+2 表达式的值为 3 add(1,2)表达式的值为函数的返回值 console.log 表达式的值为函数本身  Q: console.log(3)表达式的值为多少？</description>
    </item>
    
    <item>
      <title>内存图和 JS 世界</title>
      <link>http://zhixiukang.com/posts/memory-map-and-js-world/</link>
      <pubDate>Fri, 07 Feb 2020 15:21:33 -0800</pubDate>
      
      <guid>http://zhixiukang.com/posts/memory-map-and-js-world/</guid>
      <description>JS 小知识:
JavaScript 的历史
Javascript 诞生记
Javascript 的 10 个设计缺陷
 操作系统常识 一切都运行在内存里 开机  操作系统在 C 盘里(macOS 的在根目录下多个目录里) 当你按下开机键，主板通电，开始读取固件 固件就是固定在主板上的存储设备，里面有开机程序 开机程序会将文件里的操作系统加载到内存中运行  操作系统(以 Linux 为例)  首先加载操作系统内核 然后启动初始化进程，编号为 1，每个进程都有编号 启动系统服务: 文件、安全、联网 等待用户登录: 输入密码登录/ssh 登录 登录后，运行 shell，用户就可以和操作系统对话了 bash 是一种 shell，图形化界面可认为是一种 shell  打开浏览器 chrome.exe  你双击 Chrome 图标，就会运行 chrome.exe 文件 开启 Chrome 进程，作为主进程 主进程会开启一些辅助进程，如网络服务、GPU 加速 你每新建一个网页，就有可能会开启一个子进程  浏览器的功能   发起请求，下载 HTML，解析 HTML，下载 CSS，解析 CSS，渲染界面，下载 JS，解析 JS，执行 JS 等</description>
    </item>
    
  </channel>
</rss>