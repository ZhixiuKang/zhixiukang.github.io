<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>设计模式 on 修的个人网站</title>
    <link>http://zhixiukang.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link>
    <description>Recent content in 设计模式 on 修的个人网站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 21 Mar 2020 15:21:33 -0800</lastBuildDate>
    
	<atom:link href="http://zhixiukang.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>MVC和重构</title>
      <link>http://zhixiukang.com/posts/mvc-and-code-refactoring/</link>
      <pubDate>Sat, 21 Mar 2020 15:21:33 -0800</pubDate>
      
      <guid>http://zhixiukang.com/posts/mvc-and-code-refactoring/</guid>
      <description>MVC 是什么  M-Model (数据模型)   负责操作所有数据
  V-View (视图)   负责所有 UI 界面
  C-Controller(控制器)   负责其他
 // 数据放在m const m = { data: {}, // 对数据增删改查  create() {}, delete() {}, update(data) {}, get() {}, }; // 视图放在v const v = { el: null, html: ``, init(container) { v.el = $(container); }, // 渲染函数，参数将是数据。视图全都是对数据渲染 view = render(data)  render(x) {}, }; // 其他放在c const c = { init(container) {}, events: {}, add() {}, minus() {}, mul() {}, div() {}, // 自动绑定事件  autoBindEvents() {}, }; 代码重构 最小知识原则  引入一个模块需要引入 html、css、 js 引入一个模块需要引入 html、js 引入一个模块需要引入 js 你需要知道的知识越少越好,模块化为这一点奠定了基础   在 ES6 中，可以使用 import 关键字引入模块，通过 export 关键字导出模块</description>
    </item>
    
  </channel>
</rss>