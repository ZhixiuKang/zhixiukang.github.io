<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HTML on 修的个人网站</title>
    <link>http://zhixiukang.com/tags/html/</link>
    <description>Recent content in HTML on 修的个人网站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 06 Feb 2020 15:21:33 -0800</lastBuildDate>
    
	<atom:link href="http://zhixiukang.com/tags/html/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>请求和响应 &amp; Node.js Server</title>
      <link>http://zhixiukang.com/posts/request-response-and-nodejs-server/</link>
      <pubDate>Thu, 06 Feb 2020 15:21:33 -0800</pubDate>
      
      <guid>http://zhixiukang.com/posts/request-response-and-nodejs-server/</guid>
      <description>请求与响应模型  帮你发请求的工具叫做User-Agent
 如何做出一个响应  Node.js 有一个 http 模块可以做到  初始代码
   注意事项  这些代码就是服务器代码，一般放在服务器上 path 是不带查询参数的路径 /x query 是查询参数的对象形式{a:’1’} queryString 是查询参数的字符串形式?a=1 pathWithQuery 是带查询参数的路径，一般不用 request 是请求对象 response 是响应对象  代码逻辑  每次收到请求都会把中间的代码执行一遍 用 if else 判断路径，并返回响应 如果是已知路径，一律返回 200 如果是未知路径，一律返回 404 Content-Type 表示内容的类型/语法 response.write()可以填写返回的内容 response.end()表示响应可以发给用户了   URL 里的后缀没有用, /y.css 不一定是 CSS 内容
  Content-Type 才是决定文件类型的关键
 HTTP 基础概念之请求  请求动词 路径加查询参数 协议名/版本 Host: 域名或 IP Accept: text/html Content-Type: 请求体的格式 回车 请求体(也就是上传内容)  细节  三部分: 请求行、请求头、请求体 请求动词有 GET/POST/PUT/PATCH/DELETE 等   GET 用来获取内容，POST 用来上传内容</description>
    </item>
    
    <item>
      <title>IP、端口、域名、URL</title>
      <link>http://zhixiukang.com/posts/ip-port-domain-url/</link>
      <pubDate>Wed, 05 Feb 2020 15:21:33 -0800</pubDate>
      
      <guid>http://zhixiukang.com/posts/ip-port-domain-url/</guid>
      <description>Tim Berners-Lee 发明了 WWW
WWW = URL + HTTP + HTML
 IP 什么是 IP Internet Protocol 主要约定了两件事:
 如何定位一台设备 如何封装数据报文，以跟其他设备交流  IP 分为内网和外网  Difference between External and Local IP Addresses
 几个特殊的 IP  127.0.0.1 表示自己 localhost 通过 hosts 指定为自己 0.0.0.0 不表示任何设备  hosts 文件在哪？
在 Windows 系统中，hosts 位于 C:\Windows\System32\drivers\etc\hosts 。
在 macOS / Linux 系统中，hosts 位于 /etc/hosts
可以给其他的 ip 起别名，方便访问。
   端口 端口号 一台机器可以提供很多服务，每个服务一个号码，这个号码就叫端口号 port。</description>
    </item>
    
    <item>
      <title>HTML重难点</title>
      <link>http://zhixiukang.com/posts/html-key-parts/</link>
      <pubDate>Sat, 25 Jan 2020 15:21:33 -0800</pubDate>
      
      <guid>http://zhixiukang.com/posts/html-key-parts/</guid>
      <description>a 标签 属性  href hyper reference.  新建终端，执行：
yarn global add http-server
在本地运行，不保留缓存：
http-server -c-1或者
http-server . -c-1
使用http-server预览html,不要双击打开。
可以使用hs -c-1缩写版本，快一点。
    还可以使用parcel：
yarn global add parcel
parcel #filename.suffix
  target  &amp;lt;!— 可以指定在哪个地方打开超链接 (在空白页打开)—&amp;gt; &amp;lt;a href=“https://google.com” target=“_blank”&amp;gt;hyper link&amp;lt;/a&amp;gt;  download  &amp;lt;!--下载这个网页，基本不能用—&amp;gt; &amp;lt;a href=“https://google.com” download&amp;gt;hyper link&amp;lt;/a&amp;gt;  rel=noopener 防止一个 js 的 bug。  作用  跳转外部页面 跳转内部锚点 跳转到邮箱或电话等  a的href的取值  网址  https://google.com http://google.</description>
    </item>
    
    <item>
      <title>HTML标签</title>
      <link>http://zhixiukang.com/posts/html-labels/</link>
      <pubDate>Fri, 24 Jan 2020 15:21:33 -0800</pubDate>
      
      <guid>http://zhixiukang.com/posts/html-labels/</guid>
      <description>学习工具 网道HTML教程
 三上:马上，枕上，厕上
 VSCode插件推荐  Prettier更好地格式化工具 cmd+shift+p-&amp;gt; format doc  两个工具  jsbin 饥人谷 偏好 JShint关闭 codesandbox settings: auto save   可以将需要纠错的URL分享给别人
 HTML起手式&amp;ndash;Emmet感叹号 在空的html文件中，输入!+tab。
&amp;lt;!— 文档类型 --&amp;gt; &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;!— html标签，可以把lang改成zh-CN —&amp;gt; &amp;lt;html lang=“en”&amp;gt; &amp;lt;head&amp;gt; &amp;lt;!— 文件的字符编码 —&amp;gt; &amp;lt;meta charset=“UTF-8” /&amp;gt; &amp;lt;!— 禁用缩放 —&amp;gt; &amp;lt;meta name=“viewport” content=“width=device-width, initial-scale=1.0” /&amp;gt; &amp;lt;!— 兼容手机，告诉IE使用最新内核 —&amp;gt; &amp;lt;meta http-equiv=&amp;#34;X-UA-Compatible&amp;#34; content=&amp;#34;ie=edge&amp;#34; /&amp;gt; &amp;lt;!--标题 --&amp;gt; &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; 章节标签  标题h1-h6 章节section 文章article 段落p 头部header 脚部footer 主要内容main 旁支内容aside 划分div   全局属性 所有标签都有的属性</description>
    </item>
    
  </channel>
</rss>